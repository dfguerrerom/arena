@import "../../../style/vars";

$tableBorder: 1px solid $greyBorder;
$tableRowHeaderHeight: 40px;
$formHeaderHeight: 40px;

.survey-form {

  .node-def__form_page {
    border: 1px solid $greyBorder;
  }

  .react-grid-item {
    border: 1px solid rgba($greyBorder, .3);
  }

  //edit mode
  &.form-designer {
    .react-grid-item {
      border: 1px dashed rgba($greyBorder, .9);

      // inner page
      &.node-def__inner-form {
        border: 1px dashed $greyBorder;
      }

      > .react-resizable-handle::after {
        border-right: 2px solid rgba($greyBorder, 0.9);
        border-bottom: 2px solid rgba($greyBorder, 0.9);
      }

    }

    .node-def__form_page {
      border: 1px dashed $greyBorder;
    }
  }

  .react-grid-layout {
    .react-grid-item {

      &.cssTransforms {
        //react-grid-item css animation are disabled on first render
        transition-property: none;
      }
    }

    &.mounted {
      //react-grid-item css animation are enabled after component didMount
      .react-grid-item.cssTransforms {
        transition-property: transform;
      }
    }
  }

}

.survey-form-container {
  display: grid;
  height: calc(100% - #{$formHeaderHeight});
  grid-template-columns: 250px 1fr;
}

.survey-form.edit {
  .survey-form-container {
    grid-template-columns: 250px 1fr 200px;
  }
}

.survey-form.edit.form-actions-off {
  .survey-form-container {
    grid-template-columns: 200px 1fr 0;
  }
}


/**
* ==== survey form header
*/

.survey-form-header {
  display: flex;
  justify-content: space-between;
  align-items: start;
  height: $formHeaderHeight;
}

.survey-form-header__label-container {
  display: flex;

  .btn-add-sub-page {
    border: none;
    align-self: flex-end;
    border-bottom: 1px dashed $greyBorder;
  }
}

.survey-form-header__node-def-label {
  font-size: 1.1rem;
  font-weight: 600;
  align-self: flex-end;
  margin-left: 2rem;
}

.survey-form-header__actions {
  display: flex;

  > *:not(:last-child) {
    margin: 0 1rem;
  }

  .error-badge {
    position: relative;
  }

}

.survey-form-header__record-actions-steps > * {
  margin: 0 .5rem;
  font-size: .8rem;
}

.survey-form__actions {
  position: relative;
  display: grid;
  row-gap: 0.4rem;
  align-content: start;
  justify-content: center;
  grid-template-columns: .65fr;
  padding-top: 3rem;
  border-top: 1px dashed $greyBorder;
  border-right: 1px dashed $greyBorder;
  border-bottom: 1px dashed $greyBorder;

  .btn-toggle {
    position: absolute;
    left: 1.3rem;
  }

  .btn-add-node-def {
    background-color: rgba($green, 0.3);

    &:hover {
      background-color: rgba($green, 0.85);
    }
  }
}

// ======
// NODE DEF
// ======
.node-def__form_page {
  position: relative;
  overflow-y: auto;
}

.node-def__form {
  display: grid;
  position: relative;
  height: 100%;

  .form-input {
    text-overflow: ellipsis;
    text-align: right;
  }

  .form-item {
    grid-template-columns: 175px 1fr;
  }

  //.badge {
  //  position: fixed;
  //}

}

.node-def__not-applicable {
  background-color: rgba($greyBorder, 0.7);
  opacity: .6;
}

.node-def__invalid {
  background-color: rgba($red, .1);
}

.node-def__form-actions {
  position: absolute;
  right: 0;
  background-color: rgba($grey, .9);
  padding: .2rem .3rem;
  z-index: $zIndex1App;

  display: flex;
  font-size: .8rem;
  align-items: center;

  button {
    border: none;
    background-color: transparent;

    &:hover {
      .icon {
        color: $orange;
      }
    }
  }
}

.node-def__form-root-actions {
  margin: 0 .5rem;
  padding: .2rem;

  input {
    padding: .2rem .2rem;
    width: 30px;
    border-bottom: 1px dashed $greyBorder;
    font-size: 1em;
    text-align: center;
  }
}

.node_def__icon {
  font-size: .8rem;
  font-weight: 600;
  letter-spacing: 0;
}

.node-def__inner-form-header {
  font-weight: 600;
  text-align: center;
}

//===
//nodeDefEntity table
//===
.node-def__table {
  display: grid;
  align-self: start;
  grid-template-rows: $tableRowHeaderHeight 1fr;
  position: relative;
  height: 100%;
}

.node-def__table-header {
  justify-self: center;
  align-self: center;
  font-weight: 600;
  display: flex;
  align-items: center;
  height: $tableRowHeaderHeight;
}

.node-def__table-rows {
  position: absolute;
  top: 40px;
  width: 100%;
  height: calc(100% - 40px);
  overflow-x: auto;
  overflow-y: hidden;
}

.node-def__table-row-header {
  position: absolute;
  display: flex;
  height: $tableRowHeaderHeight;
  background-color: rgba($blueLight, 0.3);
  border-left: 1px solid transparent;
  border-right: 1px solid transparent;

  .react-grid-item {
    display: grid;
    border-right: 1px solid transparent;
  }

}

.node-def__table-column-header {
  display: grid;

  label {
    justify-self: center;
    align-self: center;
    font-weight: 600;
    font-size: .8rem;
  }
}

.node-def__table-data-rows {
  position: absolute;
  top: 40px;
  height: calc(100% - 40px);
  overflow-y: auto;
  overflow-x: hidden;
}

.node-def__table-row {
  position: relative;
  display: flex;

  .form-input {
    border: none;
    padding: 0 .5rem;
    overflow: hidden;
  }

  .react-grid-item {
    border-right: $tableBorder;
    border-bottom: $tableBorder;

    &:first-child {
      border-left: $tableBorder;
    }
  }

  &:first-child {
    .react-grid-item {
      border-top: $tableBorder;
    }
  }

}

.node-def__table-data-composite-attr {
  height: 100%;

  > div:not(:last-child) {
    border-right: $tableBorder;
  }
}

.node-def__table-row-coordinate {
  display: grid;
  grid-template-columns: repeat(3, auto);
}

.node-def__table-row-taxon {
  display: grid;
  grid-template-columns: .2fr .5fr .3fr;
}

// == data entry
.node-def__entry-multiple {
  position: relative;
  height: 100%;
  display: flex;
  align-items: center;

  .nodes {
    position: absolute;
    max-height: 100%;
    left: 0;
    right: 0;
    overflow-y: auto;
  }
}